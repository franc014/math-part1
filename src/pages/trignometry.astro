---
import Layout from '../layouts/Layout.astro';
---
<Layout title="Vectors">
    <canvas class="canvas"></canvas>
</Layout>

<style>
  .canvas {
    background-color: hsla(190, 80%, 10%);
  }
</style>

<script>
  const canvas = document.querySelector('.canvas');
  const ctx = canvas.getContext('2d');
  canvas.width = window.innerWidth;
	canvas.height  = window.innerHeight;

  let A = {
    x: 	0,
    y:  0
  };

  let B = {
    x: 	90,
    y: 	120
  };

  let C = {
    x: 	B.x,
    y: 	0
  };

  //offset coordinates
  const offset = {
    x: canvas.width / 2,
    y: canvas.height / 2
  };
 
  //set canvas in the middle
  ctx.translate(offset.x, offset.y);

  update();
  canvas.addEventListener('mousemove', (e) => {
   B.x = e.x - offset.x;
   B.y = e.y - offset.y;
   C.x = B.x; 


   update();
  })

  drawCoordinateSystem();
 

  function drawCoordinateSystem() {  
    ctx.beginPath();
    ctx.moveTo(-offset.x, 0);
    ctx.lineTo(canvas.width - offset.x, 0);
    ctx.moveTo(0, -offset.y);
    ctx.lineTo(0,canvas.height - offset.y);
    //line dash
    ctx.setLineDash([12, 2]);
    ctx.strokeStyle = 'hsl(190, 10%, 50%)';
    ctx.stroke();
    ctx.setLineDash([]);
    ctx.closePath();
   
  }

  function drawPoint(x, y, r=10 , color) {
    
    ctx.beginPath();
    
    ctx.fillStyle = color;
    ctx.arc(x, y, r/2, 0, 2 * Math.PI);
    ctx.fill();
    ctx.closePath();
    
    
  }

  function drawText({x, y}, label, color='black') {
    ctx.fillStyle = color;
		ctx.textAlign = 'center';
		ctx.textBaseline = 'middle';
		ctx.font = 'bold 30px Courier';
		ctx.fillText(label, x,y);
    ctx.strokeStyle = 'white';
    ctx.lineWidth =1;
    ctx.strokeText(label, x,y);
    ctx.closePath();
  }

  function update() {
    const c = distance(A,B);
    const b = distance(A,C);
    const a = distance(B,C);

    ctx.clearRect(-offset.x,-offset.y,
      canvas.width,canvas.height);
    drawCoordinateSystem();
   
    drawLine(A,B, 'hsl(190, 10%, 50%)');
    drawText(average(A,B),'c','black');
    drawLine(A,C, 'hsl(19, 50%, 80%)');
    drawText(average(A,C),'b','black');
    drawLine(C,B, 'hsl(19, 50%, 80%)');
    drawText(average(B,C),'a','black');

    /* drawPoint(A.x, A.y,30, 'hsl(219, 70%, 80%)');
    drawText(A, 'A');

    drawPoint(B.x, B.y,30, 'lightblue');
    drawText(B, 'B');

    drawPoint(C.x, C.y,30, 'lightgreen');
    drawText(C, 'C'); */
  }

  function distance(p1, p2) {
    const dx = p1.x - p2.x;
    const dy = p1.y - p2.y;
    return Math.hypot(dx, dy);
  }

  function average(p1, p2) {
    return {
      x: (p1.x + p2.x) / 2,
      y: (p1.y + p2.y) / 2
    }
  }

  function drawLine(p1, p2, color) {
    ctx.beginPath();
    ctx.strokeStyle = color;
    ctx.moveTo(p1.x, p1.y);
    ctx.lineTo(p2.x, p2.y);
    ctx.lineWidth = 2;
    ctx.stroke();
    ctx.closePath();
  }

 
</script>

